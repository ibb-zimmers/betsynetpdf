// DON'T EDIT MANUALLY !!!!
// auto-generated by gen_settings_bin.py !!!!

#include "BaseUtil.h"
#include "SerializeBin.h"
#include "SettingsBinSumatra.h"

namespace serbin {

#define of offsetof
const FieldMetadata gRectIntFieldMetadata[] = {
    { of(RectInt, x),  TYPE_I32, NULL },
    { of(RectInt, y),  TYPE_I32, NULL },
    { of(RectInt, dx), TYPE_I32, NULL },
    { of(RectInt, dy), TYPE_I32, NULL },
};

const StructMetadata gRectIntMetadata = { sizeof(RectInt), 4, &gRectIntFieldMetadata[0] };

const FieldMetadata gBasicSettingsFieldMetadata[] = {
    { of(BasicSettings, globalPrefsOnly),      TYPE_BOOL,       NULL              },
    { of(BasicSettings, currLanguage),         TYPE_STR,        NULL              },
    { of(BasicSettings, toolbarVisible),       TYPE_BOOL,       NULL              },
    { of(BasicSettings, pdfAssociateDontAsk),  TYPE_BOOL,       NULL              },
    { of(BasicSettings, pdfAssociateDoIt),     TYPE_BOOL,       NULL              },
    { of(BasicSettings, checkForUpdates),      TYPE_BOOL,       NULL              },
    { of(BasicSettings, rememberMruFiles),     TYPE_BOOL,       NULL              },
    { of(BasicSettings, useSystemColorScheme), TYPE_BOOL,       NULL              },
    { of(BasicSettings, inverseSearchCmdLine), TYPE_WSTR,       NULL              },
    { of(BasicSettings, versionToSkip),        TYPE_STR,        NULL              },
    { of(BasicSettings, lastUpdateTime),       TYPE_STR,        NULL              },
    { of(BasicSettings, defaultDisplayMode),   TYPE_U16,        NULL              },
    { of(BasicSettings, defaultZoom),          TYPE_FLOAT,      NULL              },
    { of(BasicSettings, windowState),          TYPE_I32,        NULL              },
    { of(BasicSettings, windowPos),            TYPE_STRUCT_PTR, &gRectIntMetadata },
    { of(BasicSettings, tocVisible),           TYPE_BOOL,       NULL              },
    { of(BasicSettings, favVisible),           TYPE_BOOL,       NULL              },
    { of(BasicSettings, sidebarDx),            TYPE_I32,        NULL              },
    { of(BasicSettings, tocDy),                TYPE_I32,        NULL              },
    { of(BasicSettings, showStartPage),        TYPE_BOOL,       NULL              },
    { of(BasicSettings, openCountWeek),        TYPE_I32,        NULL              },
    { of(BasicSettings, lastPrefUpdate),       TYPE_U64,        NULL              },
};

const StructMetadata gBasicSettingsMetadata = { sizeof(BasicSettings), 22, &gBasicSettingsFieldMetadata[0] };

const FieldMetadata gPaddingSettingsFieldMetadata[] = {
    { of(PaddingSettings, top),    TYPE_U16, NULL },
    { of(PaddingSettings, bottom), TYPE_U16, NULL },
    { of(PaddingSettings, left),   TYPE_U16, NULL },
    { of(PaddingSettings, right),  TYPE_U16, NULL },
    { of(PaddingSettings, spaceX), TYPE_U16, NULL },
    { of(PaddingSettings, spaceY), TYPE_U16, NULL },
};

const StructMetadata gPaddingSettingsMetadata = { sizeof(PaddingSettings), 6, &gPaddingSettingsFieldMetadata[0] };

const FieldMetadata gForwardSearchFieldMetadata[] = {
    { of(ForwardSearch, highlightOffset),       TYPE_I32,   NULL },
    { of(ForwardSearch, highlightWidth),        TYPE_I32,   NULL },
    { of(ForwardSearch, highlightPermanent),    TYPE_I32,   NULL },
    { of(ForwardSearch, highlightColor),        TYPE_COLOR, NULL },
    { of(ForwardSearch, enableTexEnhancements), TYPE_BOOL,  NULL },
};

const StructMetadata gForwardSearchMetadata = { sizeof(ForwardSearch), 5, &gForwardSearchFieldMetadata[0] };

const FieldMetadata gAdvancedSettingsFieldMetadata[] = {
    { of(AdvancedSettings, traditionalEbookUI),   TYPE_BOOL,       NULL                      },
    { of(AdvancedSettings, escToExit),            TYPE_BOOL,       NULL                      },
    { of(AdvancedSettings, textColor),            TYPE_COLOR,      NULL                      },
    { of(AdvancedSettings, pageColor),            TYPE_COLOR,      NULL                      },
    { of(AdvancedSettings, mainWindowBackground), TYPE_COLOR,      NULL                      },
    { of(AdvancedSettings, pagePadding),          TYPE_STRUCT_PTR, &gPaddingSettingsMetadata },
    { of(AdvancedSettings, forwardSearch),        TYPE_STRUCT_PTR, &gForwardSearchMetadata   },
};

const StructMetadata gAdvancedSettingsMetadata = { sizeof(AdvancedSettings), 7, &gAdvancedSettingsFieldMetadata[0] };

const FieldMetadata gFavFieldMetadata[] = {
    { of(Fav, name),      TYPE_STR,                              NULL },
    { of(Fav, pageNo),    TYPE_I32,                              NULL },
    { of(Fav, pageLabel), TYPE_STR,                              NULL },
    { of(Fav, menuId),    (Type)(TYPE_I32 | TYPE_NO_STORE_MASK), NULL },
};

const StructMetadata gFavMetadata = { sizeof(Fav), 4, &gFavFieldMetadata[0] };

const FieldMetadata gAppStateFieldMetadata[] = {
    { of(AppState, favorites), TYPE_ARRAY, &gFavMetadata },
};

const StructMetadata gAppStateMetadata = { sizeof(AppState), 1, &gAppStateFieldMetadata[0] };

const FieldMetadata gSettingsFieldMetadata[] = {
    { of(Settings, basic),           TYPE_STRUCT_PTR, &gBasicSettingsMetadata    },
    { of(Settings, advanced),        TYPE_STRUCT_PTR, &gAdvancedSettingsMetadata },
    { of(Settings, appState),        TYPE_STRUCT_PTR, &gAppStateMetadata         },
    { of(Settings, str_escape_test), TYPE_STR,        NULL                       },
    { of(Settings, wstr_1),          TYPE_WSTR,       NULL                       },
};

const StructMetadata gSettingsMetadata = { sizeof(Settings), 5, &gSettingsFieldMetadata[0] };

#undef of

static const uint8_t gSettingsDefault[278] = {
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x00, 0x00, 0x03, 0x02, // version 2.3
    0xbf, 0x00, 0x00, 0x00, // top-level struct offset 0xbf

    // offset: 0xc Fav_0
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x04, // 4 fields
    0x0e, 0x6d, 0x79, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x20, 0x66, 0x61, 0x76, 0x00, // const char * name = my second fav
    0x1a, // int32_t pageNo = 13
    0x18, 0x6d, 0x79, 0x20, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x20, 0x66, 0x61, 0x76, 0x00, // const char * pageLabel = my label for second fav

    // offset: 0x3a Fav_1
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x04, // 4 fields
    0x0d, 0x6d, 0x79, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x66, 0x61, 0x76, 0x00, // const char * name = my first fav
    0x2c, // int32_t pageNo = 22
    0x17, 0x6d, 0x79, 0x20, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, 0x20, 0x66, 0x61, 0x76, 0x00, // const char * pageLabel = my label for first fav

    // offset: 0x66 ForwardSearch_2
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x05, // 5 fields
    0x00, // int32_t highlightOffset = 0
    0x1e, // int32_t highlightWidth = 15
    0x00, // int32_t highlightPermanent = 0
    0xfd, 0x65, 0x81, 0xff, // uint32_t highlightColor = #6581ff
    0x00, // bool enableTexEnhancements = false

    // offset: 0x73 PaddingSettings_3
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x06, // 6 fields
    0x02, // uint16_t top = 2
    0x02, // uint16_t bottom = 2
    0x04, // uint16_t left = 4
    0x04, // uint16_t right = 4
    0x04, // uint16_t spaceX = 4
    0x04, // uint16_t spaceY = 4

    // offset: 0x7e RectInt_4
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x04, // 4 fields
    0x00, // int32_t x = 0
    0x00, // int32_t y = 0
    0x00, // int32_t dx = 0
    0x00, // int32_t dy = 0

    // offset: 0x87 AppState_5
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x01, // 1 fields
    0x02, 0x3a, 0x0c, // Vec<Fav*> * favorites = Array_6

    // offset: 0x8f AdvancedSettings_7
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x07, // 7 fields
    0x01, // bool traditionalEbookUI = true
    0x00, // bool escToExit = false
    0x00, // uint32_t textColor = #000000
    0xfd, 0xff, 0xff, 0xff, // uint32_t pageColor = #ffffff
    0xfd, 0xff, 0xf2, 0x00, // uint32_t mainWindowBackground = #fff200
    0x73, // PaddingSettings * pagePadding = PaddingSettings_3
    0x66, // ForwardSearch * forwardSearch = ForwardSearch_2

    // offset: 0xa1 BasicSettings_8
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x16, // 22 fields
    0x00, // bool globalPrefsOnly = false
    0x00, // const char * currLanguage = NULL
    0x01, // bool toolbarVisible = true
    0x00, // bool pdfAssociateDontAsk = false
    0x00, // bool pdfAssociateDoIt = false
    0x01, // bool checkForUpdates = true
    0x01, // bool rememberMruFiles = true
    0x00, // bool useSystemColorScheme = false
    0x00, // const WCHAR * inverseSearchCmdLine = NULL
    0x00, // const char * versionToSkip = NULL
    0x00, // const char * lastUpdateTime = NULL
    0x00, // uint16_t defaultDisplayMode = 0
    0x03, 0x2d, 0x31, 0x00, // float defaultZoom = -1
    0x02, // int32_t windowState = 1
    0x7e, // RectInt * windowPos = RectInt_4
    0x01, // bool tocVisible = true
    0x00, // bool favVisible = false
    0x00, // int32_t sidebarDx = 0
    0x00, // int32_t tocDy = 0
    0x01, // bool showStartPage = true
    0x00, // int32_t openCountWeek = 0
    0x00, // uint64_t lastPrefUpdate = 0

    // offset: 0xbf Settings_9
    0x54, 0x74, 0x65, 0x53, // magic id 'SetT'
    0x05, // 5 fields
    0xff, 0xa1, // BasicSettings * basic = BasicSettings_8
    0xff, 0x8f, // AdvancedSettings * advanced = AdvancedSettings_7
    0xff, 0x87, // AppState * appState = AppState_5
    0x12, 0x5b, 0x6c, 0x6f, 0x0d, 0x20, 0x24, 0x66, 0x6f, 0x09, 0x6f, 0x5c, 0x20, 0x6c, 0x0a, 0x61, 0x5d, 0x5d, 0x00, // const char * str_escape_test = [lo\r $fo	o\ l\na]]
    0x38, 0x77, 0x69, 0x64, 0x65, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0xce, 0xa0, 0xcf, 0x81, 0xce, 0xb1, 0xce, 0xb3, 0xce, 0xbc, 0xce, 0xb1, 0xcf, 0x84, 0xce, 0xb9, 0xce, 0xba, 0xcf, 0x8c, 0x20, 0x26, 0xce, 0x9c, 0xce, 0xad, 0xce, 0xb3, 0xce, 0xb5, 0xce, 0xb8, 0xce, 0xbf, 0xcf, 0x82, 0x09, 0x43, 0x74, 0x72, 0x6c, 0x2b, 0x31, 0x00, // const WCHAR * wstr_1 = wide string  &	Ctrl+1
};

Settings *DeserializeSettings(const uint8_t *data, int dataLen, bool *usedDefaultOut)
{
    void *res = NULL;
    res = Deserialize(data, dataLen, SettingsVersion, &gSettingsMetadata);
    if (res) {
        *usedDefaultOut = false;
        return (Settings*)res;
    }
    res = Deserialize(&gSettingsDefault[0], sizeof(gSettingsDefault), SettingsVersion, &gSettingsMetadata);
    CrashAlwaysIf(!res);
    *usedDefaultOut = true;
    return (Settings*)res;
}

uint8_t *SerializeSettings(Settings *val, int *dataLenOut)
{
    return Serialize((const uint8_t*)val, SettingsVersion, &gSettingsMetadata, dataLenOut);
}

void FreeSettings(Settings *val)
{
    FreeStruct((uint8_t*)val, &gSettingsMetadata);
}

}

